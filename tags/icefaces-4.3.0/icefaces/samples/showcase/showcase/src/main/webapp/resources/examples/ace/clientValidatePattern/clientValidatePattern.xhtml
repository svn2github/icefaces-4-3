<!--
  ~ Copyright 2004-2014 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
    xmlns:ace="http://www.icefaces.org/icefaces/components"
    xmlns:icecore="http://www.icefaces.org/icefaces/core"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    template="/resources/templates/content-template.xhtml">

    <ui:define name="example">

	    <h:form id="patternForm1">
		    <ace:panel id="panel1" >
			    <h:panelGrid id="inputGrid"
						 columns="1"
						 width="100%"
				         styleClass="textEntryInputTable">
			        <p>
			        This <b>&lt;ace:textEntry&gt;</b> accepts input in the form of a standard ip address
			        from 0.0.0.0 to 255.255.255.255, where none of the octets contain a
			        number higher than 255. Any other type of input should cause a validation message to appear.
                    A regex is hard coded into the ace:clientValidatePattern pattern attribute.
		            </p>
			        <ace:textEntry id="textEntry1"
                               value="#{clientValidatePatternBean.value1}"
				               label="IP address"
                               labelPosition="left" >
				        <ace:clientValidateRequired />
				        <ace:clientValidatePattern
					     pattern="^(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))$" />
			        </ace:textEntry>
			        <ace:pushButton id="formSubmit" value="Submit" />
		            <ace:message id="message1" for="textEntry1" />
		            <h:outputText id="textOut" value="Value: #{clientValidatePatternBean.value1}" />
			    </h:panelGrid>
		    </ace:panel>
	    </h:form>
	    <br />
	    <h:form id="patternForm2">
		    <ace:panel id="panel1" >
		     	<h:panelGrid id="inputGrid"
                         columns="1"
                         width="100%"
				         styleClass="textEntryInputTable">
                    <p>
                    This <b>&lt;ace:textEntry&gt;</b> accepts an email address in the form of
                    XXX@XXX.ZZZ, where the Xs can contain any reasonable amount of
				    characters. The Zs must contain 2 or more letters. <br />
				    If the "." or the "@" are missing a validation message should appear.
			        A regex is hard coded into the ace:clientValidatePattern pattern attribute.
		            </p>
			        <ace:textEntry id="textEntry2"
                               value="#{clientValidatePatternBean.value2}"
				               label="Email address"
                               labelPosition="left" >
				        <ace:clientValidateRequired />
                        <ace:clientValidatePattern
					           pattern="[\w\.-]*[a-zA-Z0-9_]@[\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z]" />
			        </ace:textEntry>
			        <ace:pushButton id="formSubmit" value="Submit" />
		            <ace:message id="message1" for="textEntry2" />
		            <h:outputText id="textOut" value="Value: #{clientValidatePatternBean.value2}" />
			    </h:panelGrid>
		    </ace:panel>
	    </h:form>

    </ui:define>
</ui:composition>
