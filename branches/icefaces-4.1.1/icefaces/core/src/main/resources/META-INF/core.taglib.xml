<?xml version="1.0"?>

<!--
  ~ Copyright 2004-2015 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<!--
	!!! Special Note !!!
	
	Any updates made to this file must also be applied to the core.tld file.
	These two files must be kept in sync.
-->

<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
                version="2.0">
    <namespace>http://www.icefaces.org/icefaces/core</namespace>
    <tag>
        <tag-name>config</tag-name>
        <description>
            You can use the ICEfaces configuration tag to adjust behaviour on a per-page basis. These settings take
            precedence over corresponding application global settings specified via context-param entries in the
            web.xml.
        </description>
        <handler-class>org.icefaces.impl.facelets.tag.icefaces.core.ConfigHandler</handler-class>

        <attribute>
            <description>
                Allows control of extra form submissions (double-submits) on a per-page basis. Setting blockUIOnSubmit
                to true tells ICEfaces that the user interface (UI) should block any subsequent requests until the
                current request has been processed.
            </description>
            <name>blockUIOnSubmit</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description>
                Allows control of lazy window scope activation on a per-page basis. By using this setting in conjunction
                with the application-scoped org.icefaces.lazyWindowScope context parameter, you can control the lazy
                activation of Ajax Push on a per-page basis.
            </description>
            <name>lazyPush</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description>
                A space-delimited list of component tag-names (or fully qualified Java class-names) that will have their
                requisite resources pre-loaded on this page. The pre-loading allows the components to function correctly
                even if they are later added to the page dynamically. The values "none" (which is the default) and "all"
                are also valid. The value of this attribute on a page takes precedence over the values specified by the
                context
                parameter org.icefaces.mandatoryResourceConfiguration in the web.xml file.
            </description>
            <name>mandatoryResource</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Allows control of ICEfaces' message persistence feature on a per-page basis. By default, ICEfaces will
                persist FacesMessages across different partial submits from the same page. This setting can be used to
                disable this behavior on a per-page basis.
            </description>
            <name>messagePersistence</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description>
                Allows control of DOM rendering on a per-page basis. By default, when ICEfaces is available, DOM
                rendering and partial page updates are enabled for stock JSF components. By using this setting in in
                conjunction with the application-scoped org.icefaces.render.auto context parameter, you can control
                whether or not ICEfaces is active on an individual page.
            </description>
            <name>render</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description>
                Allows control of DOM diffing on a per-page basis. By default, when using ICEfaces, Ajax-specified
                subtree diffing is always done. By using this setting in in conjunction with the application-scoped
                org.icefaces.subtreeDiff context parameter, you can control whether or not ICEfaces is active on an
                individual page.
            </description>
            <name>subtreeDiff</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description>
                Allows tuning of DOM diffing on a per-page basis by forcing the coalescing of the updates when they
                reach a defined maximum number. By default, when using ICEfaces, DOM diffing is done without any limit
                on the number of generated updates. By using this setting the application-scoped org.icefaces.domDiff
                context parameter will be overridden.
            </description>
            <name>diffConfig</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Allows control of focus retention on a per-page basis. By default, when using ICEfaces, focus retention
                is enabled. By using this setting the application-scoped org.icefaces.focusManaged context parameter
                will be overridden.
            </description>
            <name>focusManaged</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>refresh</tag-name>
        <description>
            This tag can be used to poll for updates.
        </description>
        <handler-class>org.icefaces.impl.facelets.tag.icefaces.core.RefreshHandler</handler-class>
        <attribute>
            <description>
                The pooling interval.
            </description>
            <name>interval</name>
            <required>true</required>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>
                If the duration is not specified, the page will be continually refreshed until the user leaves the page.
                A duration of -1 is equivalent to an infinite duration.
                A duration of 0 is equivalent to disabling the control.
            </description>
            <name>duration</name>
            <required>false</required>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>
                Disable refresh feature.
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>navigationNotifier</tag-name>
        <description>
            This tag can be used to configure the page to be notified when the browser back button is pressed.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.NavigationNotifier</component-type>
        </component>
        <attribute>
            <description>
                The reference to a bean method that will be invoked when 'back' or 'forward' browser button is used.
            </description>
            <name>action</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>defaultAction</tag-name>
        <description>
            This tag can be used to trigger an action whenever a form is submitted by a key press.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.DefaultAction</component-type>
        </component>
        <attribute>
            <description>
                The name of the key that triggers the default action (defaults to "Enter").
            </description>
            <name>key</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                The reference to a bean method that will be invoked when Enter key is pressed on any of the elements in the form.
            </description>
            <name>action</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                The reference to a bean method that will be invoked when Enter key is pressed on any of the elements in the form.
            </description>
            <name>actionListener</name>
            <required>false</required>
        </attribute>
    </tag>

    <tag>
        <tag-name>idleMonitor</tag-name>
        <description>
            This tag can be used to make its children visible when user there is not user activity and hide them when user resumes
        </description>
        <component>
            <component-type>org.icefaces.impl.component.IdleMonitor</component-type>
        </component>
        <attribute>
            <description>
                The interval of user inactivity (in seconds) after which the children are made visible
            </description>
            <name>interval</name>
            <required>false</required>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>
                The space separated list of JS events used to detect user activity.
            </description>
            <name>userActiveEvents</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>focusManager</tag-name>
        <description>
            This tag can be used to manage the focus on the included components.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.FocusManager</component-type>
        </component>
        <attribute>
            <description>
                The ID of the compon ent that should receive focus when loaded.
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>jsEventListener</tag-name>
        <description>
            This tag can be used to capture Javascript events and trigger JavaScript handlers or server-side action listeners.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.JSEventListener</component-type>
        </component>
        <attribute>
            <description>
                The ID of the component that should receive focus when loaded.
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                A comma-separated list of JavaScript event names that should be captured.
            </description>
            <name>events</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                The JavaScript callback function to be invoked when a registered event occurs.
            </description>
            <name>handler</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>push</tag-name>
        <description>
            This tag can be used to configure push behavior on a per-view basis.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.Push</component-type>
        </component>
        <attribute>
            <description>
                The push group name the current view should be added to.
            </description>
            <name>group</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>setEventPhase</tag-name>
        <description>
The Set Event Phase component allows one to specify the phase that 
certain events will be broadcast in, for events originating from components 
in its child hierarchy. Note that some iterative containers, such as UIRepeat,
UIData and its sub-classes, will wrap events inside another event type that
records source row information, so if the iterative container is in-between
setEventPhase and the intended source component, in the child/parent component
hierarchy, that will interfere with setEventPhase's ability to alter events
by their class name. Only selecting all events by specifying an events value
of "FacesEvent" would work.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.SetEventPhase</component-type>
        </component>
        <attribute>
            <description>
                Space delimited list of class names of events that should 
      be changed to be broadcasted in the specified phase. Default is for no 
      events to be affected.
            </description>
            <name>events</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                The phase for the specified events to be broadcasted in. 
      One of: ANY, APPLY_REQUEST_VALUES, PROCESS_VALIDATIONS, 
      UPDATE_MODEL_VALUES, INVOKE_APPLICATION.
            </description>
            <name>phase</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>redirect</tag-name>
        <description>
            This tag can be used to trigger a redirect by push.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.Redirect</component-type>
        </component>
        <attribute>
            <description>
                The absolute or relative location to redirect to.
            </description>
            <name>href</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>submitOnEnter</tag-name>
        <description>
            This tag enables form submission when enter key is pressed.
        </description>
        <component>
            <component-type>javax.faces.Output</component-type>
            <renderer-type>org.icefaces.submitOnEnter</renderer-type>
        </component>
        <attribute>
            <description>
                Perform submit on enter when enabled set to true
            </description>
            <name>enabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>loadBundle</tag-name>
        <description>
            This tag loads a resource bundle and saves it as a variable in the request scope.
        </description>
        <component>
            <component-type>org.icefaces.impl.component.LoadBundle</component-type>
        </component>
        <attribute>
            <description>
                The name of the variable in request scope that the resources are saved to.
            </description>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                The base name of the resource bundle.
            </description>
            <name>basename</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
</facelet-taglib>
