<?xml version='1.0' encoding='UTF-8' ?>
<!--
  ~ Copyright 2004-2014 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:ace="http://www.icefaces.org/icefaces/components"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                template="/resources/templates/content-template.xhtml">

    <ui:param name="title" value="#{msgs[gMapEventBean.title]}"/>
    <ui:param name="description" value="#{msgs[gMapEventBean.description]}"/>
    <ui:param name="subMenuTitle" value="#{msgs[gMapEventBean.subMenuTitle]}"/>
    <ui:param name="subMenuLinks" value="#{gMapEventBean.subMenuLinks}"/>
    <ui:param name="resourceValue" value="#{gMapEventBean.exampleResource}"/>

    <ui:param name="wikiResources" value="#{gMapEventResources.wikiResources}"/>
    <ui:param name="tldResources" value="#{gMapEventResources.tldResources}"/>

    <ui:define name="example">
    
	<ace:gMap id="gMap" zoomLevel="4" latitude="0" longitude="0" style="width: 675px; height: 500px">
        <ace:gMapMarker latitude="0.3900116365329134" longitude="9.4451904296875">
            <ace:gMapEvent eventType="click" scriptToUse="if(map.getZoom()&lt;7){map.setCenter(component.getPosition());map.setZoom(18);map.setMapTypeId(google.maps.MapTypeId.HYBRID);}else{map.setCenter(new google.maps.LatLng(0,0));map.setZoom(4);map.setMapTypeId(google.maps.MapTypeId.ROADMAP);}"/>
        </ace:gMapMarker>
        <ace:gMapOverlay points="(0,0)" shape="circle" options="radius:350000, editable:true">
            <ace:gMapEvent eventType="radius_changed" scriptToUse="if (component.getRadius()>600000)component.setOptions({fillColor:'red'}); else if(component.getRadius()&lt;375000)component.setOptions({fillColor:'blue'});else component.setOptions({fillColor:'green'});"/>
        </ace:gMapOverlay>
        <ace:gMapMarker latitude="0" longitude="-10">
            <ace:gMapInfoWindow content="InfoWindow Events">
                <ace:gMapEvent eventType="closeclick" scriptToUse="alert('InfoWindow was closed. Please click on the marker to reopen.');"/>
            </ace:gMapInfoWindow>
        </ace:gMapMarker>
        <ace:gMapEvent eventType="dragend" scriptToUse="if(Math.abs(map.getCenter().lat())>30||Math.abs(map.getCenter().lng())>20)map.setCenter(new google.maps.LatLng(0,0));"/>
    </ace:gMap>

    <h:form id="input">
        <table style="border:1px solid black;border-collapse:collapse;">
            <tr style="border:1px solid black;border-collapse:collapse;">
                <td style="border:1px solid black; border-collapse:collapse; text-align: center">Component</td>
                <td style="border:1px solid black; border-collapse:collapse; text-align: center">Script</td>
                <td style="border:1px solid black; border-collapse:collapse; text-align: center">Event Trigger</td>
                <td style="border:1px solid black; border-collapse:collapse; text-align: center">Purpose</td>
            </tr>
            <tr style="border:1px solid black;border-collapse:collapse;">
                <td style="border:1px solid black;border-collapse:collapse;">Map:</td>
                <td style="border:1px solid black;border-collapse:collapse;">if (Math.abs(map.getCenter().lat())>30||<br/>Math.abs(map.getCenter().lng())>20)<br/>
						&nbsp;&nbsp;&nbsp;&nbsp;map.setCenter(new google.maps.LatLng(0,0));</td>
                <td style="border:1px solid black;border-collapse:collapse;">End drag</td>
                <td style="border:1px solid black;border-collapse:collapse;">Resets the map to beginning location if dragged too far from start.</td>
            </tr>
            <tr style="border:1px solid black; border-collapse:collapse;">
                <td style="border:1px solid black;border-collapse:collapse;">Marker:</td>
                <td style="border:1px solid black;border-collapse:collapse;">
				if(map.getZoom()&lt;7){<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;map.setCenter(component.getPosition());<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;map.setZoom(18);<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;map.setMapTypeId(google.maps.MapTypeId.HYBRID);<br/>
				}else{<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;map.setCenter(new google.maps.LatLng(0,0));<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;map.setZoom(4);<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;map.setMapTypeId(google.maps.MapTypeId.ROADMAP);<br/>
				}
                </td>
                <td style="border:1px solid black;border-collapse:collapse;">Click</td>
                <td style="border:1px solid black;border-collapse:collapse;">Zooms in and changes the map type initially. Click again to reset.</td>
            </tr>
            <tr style="border:1px solid black; border-collapse:collapse;">
                <td style="border:1px solid black;border-collapse:collapse;">InfoWindow:</td>
                <td style="border:1px solid black;border-collapse:collapse;">alert('InfoWindow was closed. Please click on the marker to reopen.');</td>
                <td style="border:1px solid black;border-collapse:collapse;">Close window</td>
                <td style="border:1px solid black;border-collapse:collapse;">Alerts with predefined message.</td>
            </tr>
            <tr style="border:1px solid black; border-collapse:collapse;">
                <td style="border:1px solid black;border-collapse:collapse;">Circle:</td>
                <td style="border:1px solid black;border-collapse:collapse;">
				if (component.getRadius()>600000)<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;component.setOptions({fillColor:'red'});<br/>
				else if(component.getRadius()&lt;375000)<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;component.setOptions({fillColor:'blue'});<br/>
				else<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;component.setOptions({fillColor:'green'});</td>
                <td style="border:1px solid black;border-collapse:collapse;">Resizing</td>
                <td style="border:1px solid black;border-collapse:collapse;">Changes the circle's fill colour based upon the current radius.</td>
            </tr>
        </table>
    </h:form>
</ui:define>
</ui:composition>