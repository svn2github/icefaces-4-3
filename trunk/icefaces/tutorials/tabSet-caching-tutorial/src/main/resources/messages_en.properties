#
# Copyright 2004-2013 ICEsoft Technologies Canada Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

title.label = TabSet Caching - ICEfaces Tutorial
header.label = ICEfaces ACE Tutorials - TabSet Caching TabPane Children

navigation.link.index = tuthome,compdoc

navigation.link.tuthome.label = Tutorial Home
navigation.link.tuthome.url = http://wiki.icesoft.org/display/ICE/TabSet+Caching+TabPanes
navigation.link.compdoc.label = Component Documentation
navigation.link.compdoc.url = http://wiki.icefaces.org/display/ICE/TabSet

content.title.label = TabSet Caching TabPane Children
content.main.html = This is a tutorial illustrating the various caching settings for the TabPane component.
content.button.submit = Submit
content.button.update = Update
content.button.tryUpdateStaticCached = Try Update, but Static Cached
content.button.interact = Interact
content.button.dynamicRevertStaticAuto = Dynamic Revert Static Auto

content.tab.none.label = None
content.tab.none.header = No Caching
content.tab.none.description = No caching occurs in the browser and the tab \
  contents are completely rendered and updated in the browser when the tab \
  is active, and become unrendered when the tab is no longer active.
content.tab.none.interpretation = Every button press inside or outside this \
  TabPane, and switch between tabs, should cause the contents below to update.

content.tab.dynamic.label = Dynamic
content.tab.dynamic.header = Dynamic Caching
content.tab.dynamic.description = The tab contents are lazily loaded when the \
  tab first becomes active, and then remain in the browser. On subsequent \
  lifecycles, the previously lazily loaded tab contents will continue to be \
  rendered whether the tab is still active or not, and any changes will be \
  detected and granularly updated. Essentially, what can be cached will be \
  cached, and what has changed will be updated, all automatically.
content.tab.dynamic.interpretation = The content below on the left should \
  always update, and the content below and to the right of the buttons should only update when \
  the Update button is pressed, illustrating that updates are granular.

content.tab.static.label = Static
content.tab.static.header = Static Caching
content.tab.static.description = The tab contents are lazily loaded when the \
  tab first becomes active, and then remain in the browser. The tab will not \
  be rendered or updated after the first time. This is an optimisation to \
  reduce rendering resource usage. This is intended for displaying large \
  unchanging data sets that the user views but does not interact with.
content.tab.static.interpretation = The content below should never update, \
  even though it is coded to be always changing, since the static caching \
  will keep it from updating.

content.tab.staticAuto.label = Static Auto
content.tab.staticAuto.header = Static Caching with Automatic Update Handling
content.tab.staticAuto.description = Behaves like static caching, until the \
  moment when the user interacts with an input or command component within \
  the TabPane, that causes a submit to the server, at which point, for that \
  one lifecycle, the contents of the TabPane will be rendered and updated. \
  The updates may be granular or comprehensive, depending on previous user \
  interactions, as this caching strategy favours eliminating rendering and \
  updating when possible, which can later cause larger updates. For TabPanes \
  with user interactions that affect the server, which are more than \
  sporadic, then dynamic caching is likely more appropriate.
content.tab.staticAuto.interpretation = The content below will not update \
  when changing between tabs, nor from interactions occurring outside of this \
  TabPane, but changing the input field value or pressing the Interact button \
  will update the content automatically.

content.tab.dynamicRevertStaticAuto.label = Dynamic Revert Static Auto
content.tab.dynamicRevertStaticAuto.header = Static Caching with Automatic \
  and Explicit Update Handling
content.tab.dynamicRevertStaticAuto.description = Works in conjunction with \
  staticAuto caching. The idea being that just like how staticAuto knows to \
  render and update the TabPane when an input or command component within the \
  TabPane causes a server submit, there may be components outside the TabPane \
  that might perform some operation which should affect the TabPane contents, \
  and only in that lifecycle a render and update of the TabPane should occur. \
  This is accomplished by using a ValueExpression for the cache property on \
  the TabPane, bound to a settable bean property, which is initialised to \
  staticAuto. In the action, actionListener, valueChangeListener, or \
  whichever application code that executes before the render phase, the \
  application would set the bean property to dynamicRevertStaticAuto, which \
  will then force the behaviour of rendering and updating the TabPane for the \
  one lifecycle. Then the TabPane cache property will automatically revert to \
  being staticAuto going forward, which is why the bean property needs to have \
  a setter method.
content.tab.dynamicRevertStaticAuto.interpretation = This will behave exactly \
  like staticAuto, since it is actually set to staticAuto. The Submit button \
  below the TabSet will not effect the contents, as it would not for \
  staticAuto, but the Dynamic Revert Static Auto button below will update the \
  contents, as it has an actionListener that switches the cache property to \
  dynamicRevertStaticAuto.

# -- common template content --
template.icesoft = ICEsoft Technologies Inc.
template.copyright = &copy;&#160;2004-2013
template.poweredBy = Powered By ICEfaces
