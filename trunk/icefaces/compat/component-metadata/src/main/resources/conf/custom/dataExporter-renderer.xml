<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2004-2013 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<renderer>
	<description>
		<![CDATA[<p> The ice:dataExporter component can be used to export the 
		data contents of an ice:dataTable component into a variety of formats.<br/>
		The following three formats are supported by the component:
		<ul>
		   <li>Excel
		   <li>CSV
		   <li>PDF
		</ul>
		Exporting to PDF requires the presence of the iText jar in your application, which can be downloaded from itextpdf.com
		<br/>
		The outputTypeHandler attribute allows developer to define custom output
		formats.
            The <b>label</b>, <b>image</b> and <b>renderLabelAsButton</b> are interrelated. Their order of precedence are as follows:
            <ul>
                <li>If image URL is specified, the label text will become the alt text for the image, the image is
                a clickable anchor to trigger the export operation. This supercedes the following two configurations.</li>
                <li>If renderLabelAsButton=true, the label text will used for a rendered button that will trigger the export operation.</li>
                <li>(default) The label text is rendered as an anchor which, when clicked, will trigger the export operation.</li>
            </ul>
		</p>
		         ]]>
	</description>
	<component-family>com.icesoft.faces.DataExporter</component-family>		
	<renderer-type>com.icesoft.faces.DataExporterRenderer</renderer-type>

	<renderer-extension>
		<instance-name>dataExporter</instance-name>
		<is-container>false</is-container>
		<renders-children>false</renders-children>
		<tag-name>dataExporter</tag-name>
		<taglib-prefix>@taglib-prefix@</taglib-prefix>
		<taglib-uri>@taglib-uri@</taglib-uri>
	</renderer-extension>
</renderer>
